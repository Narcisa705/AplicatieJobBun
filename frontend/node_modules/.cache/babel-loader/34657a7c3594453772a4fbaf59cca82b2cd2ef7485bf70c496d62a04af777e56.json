{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Narci\\\\Poiect Job\\\\frontend\\\\src\\\\components\\\\AddWork.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddWorkForm = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [image, setImage] = useState(null);\n  const [link, setLink] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [userDetailsVisible, setUserDetailsVisible] = useState(false);\n  const [userName, setUserName] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!title || !description || !image || !link || !email) {\n      setErrorMessage('Please fill out all required fields.');\n      return;\n    }\n    try {\n      // Check if user exists by email\n      const userResponse = await fetch(`http://localhost:3001/users/email/${email}`);\n      if (userResponse.status === 404) {\n        // User not found, show additional fields to create a new user\n        setUserDetailsVisible(true);\n      } else if (userResponse.ok) {\n        await addWork(user.id);\n      } else if (userResponse.status >= 500) {\n        // Server error\n        setErrorMessage('Server error occurred. Please try again later.');\n        console.error('Server error:', await userResponse.text());\n        setUserDetailsVisible(true); // Show additional fields to create a user\n      } else {\n        // Other unexpected status codes\n        const errorResponse = await userResponse.json();\n        setErrorMessage(`Error: ${errorResponse.message}`);\n        console.error('Unexpected error:', errorResponse);\n      }\n    } catch (error) {\n      setErrorMessage('Error checking user existence.');\n      console.error('Error checking user existence:', error);\n    }\n  };\n  const addWork = async userId => {\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('description', description);\n    formData.append('image', image);\n    formData.append('clientUrl', link);\n    formData.append('status', 'hidden');\n    formData.append('userId', userId);\n    try {\n      const response = await fetch('http://localhost:3001/work', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorResponse = await response.json();\n        if (response.status === 400 && errorResponse.message.includes('duplicate')) {\n          setErrorMessage('A work with this title already exists.');\n        } else {\n          setErrorMessage('Error adding work.');\n        }\n        return;\n      }\n      const result = await response.json();\n      setSuccessMessage('Work added successfully!');\n      setTitle('');\n      setDescription('');\n      setImage(null);\n      setLink('');\n      setEmail('');\n      setPassword('');\n      setUserName('');\n      setUserDetailsVisible(false); // Hide additional fields\n      setErrorMessage('');\n    } catch (error) {\n      setErrorMessage('There was an error adding the work.');\n      console.error('There was an error adding the work:', error);\n    }\n  };\n  const handleUserCreation = async () => {\n    if (!userName || !email || !password) {\n      setErrorMessage('Please fill out all required fields to create a user.');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:3001/users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: userName,\n          email,\n          password\n        }) // Include password\n      });\n      if (!response.ok) {\n        const errorResponse = await response.json();\n        setErrorMessage(`Error: ${errorResponse.message}`);\n        console.error('Error creating user:', errorResponse);\n        return;\n      }\n      const user = await response.json();\n      await addWork(user.id);\n    } catch (error) {\n      setErrorMessage('Error creating user.');\n      console.error('Error creating user:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-work-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add New Work\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 24\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success-message\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"add-work-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          required: true,\n          className: \"form-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          required: true,\n          className: \"form-textarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          children: \"Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"image\",\n          accept: \"image/*\",\n          onChange: e => setImage(e.target.files[0]),\n          required: true,\n          className: \"form-file-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"link\",\n          children: \"Link:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"url\",\n          id: \"link\",\n          value: link,\n          onChange: e => setLink(e.target.value),\n          required: true,\n          className: \"form-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true,\n          className: \"form-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Add Work\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), userDetailsVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-details-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create New User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"userName\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"userName\",\n          value: userName,\n          onChange: e => setUserName(e.target.value),\n          required: true,\n          className: \"form-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"newEmail\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"newEmail\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true,\n          className: \"form-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true,\n          className: \"form-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUserCreation,\n        className: \"submit-button\",\n        children: \"Create User and Add Work\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(AddWorkForm, \"W9m8QJV2h8WczqjOoiZAZfzKzlA=\");\n_c = AddWorkForm;\nexport default AddWorkForm;\nvar _c;\n$RefreshReg$(_c, \"AddWorkForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddWorkForm","_s","title","setTitle","description","setDescription","image","setImage","link","setLink","email","setEmail","password","setPassword","userDetailsVisible","setUserDetailsVisible","userName","setUserName","errorMessage","setErrorMessage","successMessage","setSuccessMessage","handleSubmit","e","preventDefault","userResponse","fetch","status","ok","addWork","user","id","console","error","text","errorResponse","json","message","userId","formData","FormData","append","response","method","body","includes","result","handleUserCreation","headers","JSON","stringify","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","value","onChange","target","required","accept","files","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Narci/Poiect Job/frontend/src/components/AddWork.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst AddWorkForm = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [image, setImage] = useState(null);\r\n  const [link, setLink] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [userDetailsVisible, setUserDetailsVisible] = useState(false);\r\n  const [userName, setUserName] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!title || !description || !image || !link || !email) {\r\n      setErrorMessage('Please fill out all required fields.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Check if user exists by email\r\n      const userResponse = await fetch(`http://localhost:3001/users/email/${email}`);\r\n\r\n      if (userResponse.status === 404) {\r\n        // User not found, show additional fields to create a new user\r\n        setUserDetailsVisible(true);\r\n      } else if (userResponse.ok) {\r\n        await addWork(user.id);\r\n      } else if (userResponse.status >= 500) {\r\n        // Server error\r\n        setErrorMessage('Server error occurred. Please try again later.');\r\n        console.error('Server error:', await userResponse.text());\r\n        setUserDetailsVisible(true); // Show additional fields to create a user\r\n      } else {\r\n        // Other unexpected status codes\r\n        const errorResponse = await userResponse.json();\r\n        setErrorMessage(`Error: ${errorResponse.message}`);\r\n        console.error('Unexpected error:', errorResponse);\r\n      }\r\n    } catch (error) {\r\n      setErrorMessage('Error checking user existence.');\r\n      console.error('Error checking user existence:', error);\r\n    }\r\n  };\r\n\r\n  const addWork = async (userId) => {\r\n    const formData = new FormData();\r\n    formData.append('title', title);\r\n    formData.append('description', description);\r\n    formData.append('image', image);\r\n    formData.append('clientUrl', link);\r\n    formData.append('status', 'hidden');\r\n    formData.append('userId', userId);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:3001/work', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorResponse = await response.json();\r\n        if (response.status === 400 && errorResponse.message.includes('duplicate')) {\r\n          setErrorMessage('A work with this title already exists.');\r\n        } else {\r\n          setErrorMessage('Error adding work.');\r\n        }\r\n        return;\r\n      }\r\n\r\n      const result = await response.json();\r\n      \r\n      setSuccessMessage('Work added successfully!');\r\n      setTitle('');\r\n      setDescription('');\r\n      setImage(null);\r\n      setLink('');\r\n      setEmail('');\r\n      setPassword('');\r\n      setUserName('');\r\n      setUserDetailsVisible(false); // Hide additional fields\r\n      setErrorMessage('');\r\n    } catch (error) {\r\n      setErrorMessage('There was an error adding the work.');\r\n      console.error('There was an error adding the work:', error);\r\n    }\r\n  };\r\n\r\n  const handleUserCreation = async () => {\r\n    if (!userName || !email || !password) {\r\n      setErrorMessage('Please fill out all required fields to create a user.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:3001/users', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ name: userName, email, password }), // Include password\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorResponse = await response.json();\r\n        setErrorMessage(`Error: ${errorResponse.message}`);\r\n        console.error('Error creating user:', errorResponse);\r\n        return;\r\n      }\r\n\r\n      const user = await response.json();\r\n      await addWork(user.id);\r\n    } catch (error) {\r\n      setErrorMessage('Error creating user.');\r\n      console.error('Error creating user:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-work-form-container\">\r\n      <h1>Add New Work</h1>\r\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n      {successMessage && <p className=\"success-message\">{successMessage}</p>}\r\n      <form onSubmit={handleSubmit} className=\"add-work-form\">\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"title\">Title:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"title\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            required\r\n            className=\"form-input\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"description\">Description:</label>\r\n          <textarea\r\n            id=\"description\"\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n            required\r\n            className=\"form-textarea\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"image\">Image:</label>\r\n          <input\r\n            type=\"file\"\r\n            id=\"image\"\r\n            accept=\"image/*\"\r\n            onChange={(e) => setImage(e.target.files[0])}\r\n            required\r\n            className=\"form-file-input\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"link\">Link:</label>\r\n          <input\r\n            type=\"url\"\r\n            id=\"link\"\r\n            value={link}\r\n            onChange={(e) => setLink(e.target.value)}\r\n            required\r\n            className=\"form-input\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n            className=\"form-input\"\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"submit-button\">Add Work</button>\r\n      </form>\r\n\r\n      {userDetailsVisible && (\r\n        <div className=\"user-details-container\">\r\n          <h2>Create New User</h2>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"userName\">Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"userName\"\r\n              value={userName}\r\n              onChange={(e) => setUserName(e.target.value)}\r\n              required\r\n              className=\"form-input\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"newEmail\">Email:</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"newEmail\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n              className=\"form-input\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password:</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n              className=\"form-input\"\r\n            />\r\n          </div>\r\n          <button onClick={handleUserCreation} className=\"submit-button\">Create User and Add Work</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddWorkForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}