{"ast":null,"code":"// // src/components/UserTable.jsx\n// import React, { useEffect, useState } from 'react';\n\n// const UserTable = () => {\n//   const [users, setUsers] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     // Înlocuiește cu URL-ul corect pentru backend-ul tău\n//     fetch('http://localhost:3001/users')\n//       .then(response => {\n//         if (!response.ok) {\n//           throw new Error('Network response was not ok');\n//         }\n//         return response.json();\n//       })\n//       .then(data => {\n//         setUsers(data);\n//         setLoading(false);\n//       })\n//       .catch(error => {\n//         console.error('There was an error fetching the users!', error);\n//         setError(error);\n//         setLoading(false);\n//       });\n//   }, []);\n\n//   if (loading) {\n//     return <p>Loading...</p>;\n//   }\n\n//   if (error) {\n//     return <p>There was an error: {error.message}</p>;\n//   }\n\n//   return (\n//     <div>\n//       <h1>Users</h1>\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>ID</th>\n//             <th>Name</th>\n//             <th>Email</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {users.map(user => (\n//             <tr key={user.id}>\n//               <td>{user.id}</td>\n//               <td>{user.name}</td>\n//               <td>{user.email}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default UserTable;","map":{"version":3,"names":[],"sources":["C:/Users/Narci/Poiect Job/frontend/src/components/UserTable.jsx"],"sourcesContent":["// // src/components/UserTable.jsx\r\n// import React, { useEffect, useState } from 'react';\r\n\r\n// const UserTable = () => {\r\n//   const [users, setUsers] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     // Înlocuiește cu URL-ul corect pentru backend-ul tău\r\n//     fetch('http://localhost:3001/users')\r\n//       .then(response => {\r\n//         if (!response.ok) {\r\n//           throw new Error('Network response was not ok');\r\n//         }\r\n//         return response.json();\r\n//       })\r\n//       .then(data => {\r\n//         setUsers(data);\r\n//         setLoading(false);\r\n//       })\r\n//       .catch(error => {\r\n//         console.error('There was an error fetching the users!', error);\r\n//         setError(error);\r\n//         setLoading(false);\r\n//       });\r\n//   }, []);\r\n\r\n//   if (loading) {\r\n//     return <p>Loading...</p>;\r\n//   }\r\n\r\n//   if (error) {\r\n//     return <p>There was an error: {error.message}</p>;\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Users</h1>\r\n//       <table>\r\n//         <thead>\r\n//           <tr>\r\n//             <th>ID</th>\r\n//             <th>Name</th>\r\n//             <th>Email</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {users.map(user => (\r\n//             <tr key={user.id}>\r\n//               <td>{user.id}</td>\r\n//               <td>{user.name}</td>\r\n//               <td>{user.email}</td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UserTable;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}