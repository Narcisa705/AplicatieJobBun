{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Narci\\\\Poiect Job\\\\frontend\\\\src\\\\components\\\\ClientTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './client-table.css'; // Importă stilurile CSS pentru tabel\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClientTable = () => {\n  _s();\n  const [clients, setClients] = useState([]);\n  useEffect(() => {\n    const fetchClients = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/users');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setClients(data);\n      } catch (error) {\n        console.error('Error fetching clients:', error);\n      }\n    };\n    fetchClients();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"client-table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Client Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"client-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Works\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: clients.map(client => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: client.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: client.address || 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: client.works && client.works.length > 0 ? client.works.map(work => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: work.title\n            }, work.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 21\n            }, this)) : 'No works'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)]\n        }, client.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(ClientTable, \"cUQn5teewQOIEjPDAOj81V47VgI=\");\n_c = ClientTable;\nexport default ClientTable;\nvar _c;\n$RefreshReg$(_c, \"ClientTable\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ClientTable","_s","clients","setClients","fetchClients","response","fetch","ok","Error","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","client","name","address","works","length","work","title","id","_c","$RefreshReg$"],"sources":["C:/Users/Narci/Poiect Job/frontend/src/components/ClientTable.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './client-table.css'; // Importă stilurile CSS pentru tabel\r\n\r\nconst ClientTable = () => {\r\n  const [clients, setClients] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchClients = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3001/users');\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        const data = await response.json();\r\n        setClients(data);\r\n      } catch (error) {\r\n        console.error('Error fetching clients:', error);\r\n      }\r\n    };\r\n\r\n    fetchClients();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"client-table-container\">\r\n      <h1>Client Table</h1>\r\n      <table className=\"client-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Address</th>\r\n            <th>Works</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {clients.map((client) => (\r\n            <tr key={client.id}>\r\n              <td>{client.name}</td>\r\n              <td>{client.address || 'N/A'}</td>\r\n              <td>\r\n                {client.works && client.works.length > 0 ? (\r\n                  client.works.map((work) => (\r\n                    <div key={work.id}>{work.title}</div>\r\n                  ))\r\n                ) : (\r\n                  'No works'\r\n                )}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}